"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/ImageChangeOnScroll",{

/***/ "./src/ImageToggleOnScroll.js":
/*!************************************!*\
  !*** ./src/ImageToggleOnScroll.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\nvar _jsxFileName = \"/Users/vtsang/OneDrive - Capgemini/code/using-react-hooks/src/ImageToggleOnScroll.js\",\n    _this = undefined,\n    _s = $RefreshSig$();\n\n/* \n\nColourising on Scroll based on if the photos is in full view of the browser and allow for scrolling to trigger the calculation to determin that.\nThe first parameter in this hook is a function that gets exectuted when the component mounts, which we have to remove before the component unmounts,\nso the return function inside this arrow function removes the listener.\nThe second parameter within useEffect function is an array that contains dependancies. Since don't need to add and remove the scroll listeners on every\ncomponent updates, can use an empty array which tells useEffect to only run when the component is first rendered.\nTrack if image is completely in the broswer showing window. By default let's say we have a large list of images and they are not inview.\nSo we use 'false' for the initial setting.\nReference the useEffect and useState Hooks in the import statement.\nWe use the: ref attribute (ref={}) to figure out where on page the image is.\nCode the scroll handler to set the inView state based on whether the image is actually in view. Each time the page scrolls, this is calculated again.\n\nSet the src attribute of image to sow a color image when this when this image component is in view and a black and white image one when it is not.\nPrimary image = b&w, secondary image is color.\n\n*/\n\n\nvar ImageToggleOnScroll = function ImageToggleOnScroll(_ref) {\n  _s();\n\n  var primaryImg = _ref.primaryImg,\n      secondaryImg = _ref.secondaryImg;\n  var imageRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // Two line function isInView that returns whether the image is showing in the scrollable area or not. getBoundingClientREact combined with the size of the\n  // image retangle works for us.\n\n  var isInView = function isInView() {\n    var rect = imageRef.current.getBoundingClientRect();\n    return rect.top >= 0 && rect.bottom <= window.innerHeight;\n  }; // track if image is completely in the broswer showing window. By default let's say we have a large list of images and they are not inview.\n  // So we use 'false' for the initial setting.\n\n\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),\n      inView = _useState[0],\n      setInView = _useState[1]; // Add 'scroll event listener' by adding the useEffect Hook when the component first mounts.\n\n\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    window.addEventListener(\"scroll\", scrollHandler); // the return function inside this arrow function removes the listener:\n\n    return function () {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  }, []); // Scroll handler to set the inView state based on whether the image is actually in view. Each time the page scrolls, this is calculated again.\n\n  var scrollHandler = function scrollHandler() {\n    setInView(isInView());\n  }; // Set the src attribute of image to sow a color image when this when this image component is in view and a black and white image one when it is not.\n  // Primary image = b&w, secondary image is color.\n\n\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n    src: inView ? secondaryImg : primaryImg,\n    alt: \"\",\n    ref: imageRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(ImageToggleOnScroll, \"DW9zIqqhn+MB7lq14nziwyeM65c=\");\n\n_c = ImageToggleOnScroll;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ImageToggleOnScroll);\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageToggleOnScroll\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvSW1hZ2VUb2dnbGVPblNjcm9sbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUEsSUFBTUksbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFzQixPQUFrQztBQUFBOztBQUFBLE1BQS9CQyxVQUErQixRQUEvQkEsVUFBK0I7QUFBQSxNQUFuQkMsWUFBbUIsUUFBbkJBLFlBQW1CO0FBQzVELE1BQU1DLFFBQVEsR0FBR0wsNkNBQU0sQ0FBQyxJQUFELENBQXZCLENBRDRELENBRTVEO0FBQ0E7O0FBQ0EsTUFBTU0sUUFBUSxHQUFHLFNBQVhBLFFBQVcsR0FBTTtBQUNyQixRQUFNQyxJQUFJLEdBQUdGLFFBQVEsQ0FBQ0csT0FBVCxDQUFpQkMscUJBQWpCLEVBQWI7QUFDQSxXQUFPRixJQUFJLENBQUNHLEdBQUwsSUFBWSxDQUFaLElBQWlCSCxJQUFJLENBQUNJLE1BQUwsSUFBZUMsTUFBTSxDQUFDQyxXQUE5QztBQUNELEdBSEQsQ0FKNEQsQ0FTNUQ7QUFDQTs7O0FBVjRELGtCQVdoQ1osK0NBQVEsQ0FBQyxLQUFELENBWHdCO0FBQUEsTUFXckRhLE1BWHFEO0FBQUEsTUFXN0NDLFNBWDZDLGlCQWE1RDs7O0FBQ0FoQixFQUFBQSxnREFBUyxDQUFDLFlBQU07QUFDZGEsSUFBQUEsTUFBTSxDQUFDSSxnQkFBUCxDQUF3QixRQUF4QixFQUFrQ0MsYUFBbEMsRUFEYyxDQUVkOztBQUNBLFdBQU8sWUFBTTtBQUNYTCxNQUFBQSxNQUFNLENBQUNNLG1CQUFQLENBQTJCLFFBQTNCLEVBQXFDRCxhQUFyQztBQUNELEtBRkQ7QUFHRCxHQU5RLEVBTU4sRUFOTSxDQUFULENBZDRELENBc0I1RDs7QUFDQSxNQUFNQSxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLEdBQU07QUFDMUJGLElBQUFBLFNBQVMsQ0FBQ1QsUUFBUSxFQUFULENBQVQ7QUFDRCxHQUZELENBdkI0RCxDQTJCNUQ7QUFDQTs7O0FBQ0Esc0JBQU87QUFBSyxPQUFHLEVBQUVRLE1BQU0sR0FBR1YsWUFBSCxHQUFrQkQsVUFBbEM7QUFBOEMsT0FBRyxFQUFDLEVBQWxEO0FBQXFELE9BQUcsRUFBRUU7QUFBMUQ7QUFBQTtBQUFBO0FBQUE7QUFBQSxXQUFQO0FBQ0QsQ0E5QkQ7O0dBQU1IOztLQUFBQTtBQWdDTiwrREFBZUEsbUJBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL0ltYWdlVG9nZ2xlT25TY3JvbGwuanM/OTY2MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBcblxuQ29sb3VyaXNpbmcgb24gU2Nyb2xsIGJhc2VkIG9uIGlmIHRoZSBwaG90b3MgaXMgaW4gZnVsbCB2aWV3IG9mIHRoZSBicm93c2VyIGFuZCBhbGxvdyBmb3Igc2Nyb2xsaW5nIHRvIHRyaWdnZXIgdGhlIGNhbGN1bGF0aW9uIHRvIGRldGVybWluIHRoYXQuXG5UaGUgZmlyc3QgcGFyYW1ldGVyIGluIHRoaXMgaG9vayBpcyBhIGZ1bmN0aW9uIHRoYXQgZ2V0cyBleGVjdHV0ZWQgd2hlbiB0aGUgY29tcG9uZW50IG1vdW50cywgd2hpY2ggd2UgaGF2ZSB0byByZW1vdmUgYmVmb3JlIHRoZSBjb21wb25lbnQgdW5tb3VudHMsXG5zbyB0aGUgcmV0dXJuIGZ1bmN0aW9uIGluc2lkZSB0aGlzIGFycm93IGZ1bmN0aW9uIHJlbW92ZXMgdGhlIGxpc3RlbmVyLlxuVGhlIHNlY29uZCBwYXJhbWV0ZXIgd2l0aGluIHVzZUVmZmVjdCBmdW5jdGlvbiBpcyBhbiBhcnJheSB0aGF0IGNvbnRhaW5zIGRlcGVuZGFuY2llcy4gU2luY2UgZG9uJ3QgbmVlZCB0byBhZGQgYW5kIHJlbW92ZSB0aGUgc2Nyb2xsIGxpc3RlbmVycyBvbiBldmVyeVxuY29tcG9uZW50IHVwZGF0ZXMsIGNhbiB1c2UgYW4gZW1wdHkgYXJyYXkgd2hpY2ggdGVsbHMgdXNlRWZmZWN0IHRvIG9ubHkgcnVuIHdoZW4gdGhlIGNvbXBvbmVudCBpcyBmaXJzdCByZW5kZXJlZC5cblRyYWNrIGlmIGltYWdlIGlzIGNvbXBsZXRlbHkgaW4gdGhlIGJyb3N3ZXIgc2hvd2luZyB3aW5kb3cuIEJ5IGRlZmF1bHQgbGV0J3Mgc2F5IHdlIGhhdmUgYSBsYXJnZSBsaXN0IG9mIGltYWdlcyBhbmQgdGhleSBhcmUgbm90IGludmlldy5cblNvIHdlIHVzZSAnZmFsc2UnIGZvciB0aGUgaW5pdGlhbCBzZXR0aW5nLlxuUmVmZXJlbmNlIHRoZSB1c2VFZmZlY3QgYW5kIHVzZVN0YXRlIEhvb2tzIGluIHRoZSBpbXBvcnQgc3RhdGVtZW50LlxuV2UgdXNlIHRoZTogcmVmIGF0dHJpYnV0ZSAocmVmPXt9KSB0byBmaWd1cmUgb3V0IHdoZXJlIG9uIHBhZ2UgdGhlIGltYWdlIGlzLlxuQ29kZSB0aGUgc2Nyb2xsIGhhbmRsZXIgdG8gc2V0IHRoZSBpblZpZXcgc3RhdGUgYmFzZWQgb24gd2hldGhlciB0aGUgaW1hZ2UgaXMgYWN0dWFsbHkgaW4gdmlldy4gRWFjaCB0aW1lIHRoZSBwYWdlIHNjcm9sbHMsIHRoaXMgaXMgY2FsY3VsYXRlZCBhZ2Fpbi5cblxuU2V0IHRoZSBzcmMgYXR0cmlidXRlIG9mIGltYWdlIHRvIHNvdyBhIGNvbG9yIGltYWdlIHdoZW4gdGhpcyB3aGVuIHRoaXMgaW1hZ2UgY29tcG9uZW50IGlzIGluIHZpZXcgYW5kIGEgYmxhY2sgYW5kIHdoaXRlIGltYWdlIG9uZSB3aGVuIGl0IGlzIG5vdC5cblByaW1hcnkgaW1hZ2UgPSBiJncsIHNlY29uZGFyeSBpbWFnZSBpcyBjb2xvci5cblxuKi9cblxuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuXG5jb25zdCBJbWFnZVRvZ2dsZU9uU2Nyb2xsID0gKHsgcHJpbWFyeUltZywgc2Vjb25kYXJ5SW1nIH0pID0+IHtcbiAgY29uc3QgaW1hZ2VSZWYgPSB1c2VSZWYobnVsbCk7XG4gIC8vIFR3byBsaW5lIGZ1bmN0aW9uIGlzSW5WaWV3IHRoYXQgcmV0dXJucyB3aGV0aGVyIHRoZSBpbWFnZSBpcyBzaG93aW5nIGluIHRoZSBzY3JvbGxhYmxlIGFyZWEgb3Igbm90LiBnZXRCb3VuZGluZ0NsaWVudFJFYWN0IGNvbWJpbmVkIHdpdGggdGhlIHNpemUgb2YgdGhlXG4gIC8vIGltYWdlIHJldGFuZ2xlIHdvcmtzIGZvciB1cy5cbiAgY29uc3QgaXNJblZpZXcgPSAoKSA9PiB7XG4gICAgY29uc3QgcmVjdCA9IGltYWdlUmVmLmN1cnJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgcmV0dXJuIHJlY3QudG9wID49IDAgJiYgcmVjdC5ib3R0b20gPD0gd2luZG93LmlubmVySGVpZ2h0O1xuICB9O1xuXG4gIC8vIHRyYWNrIGlmIGltYWdlIGlzIGNvbXBsZXRlbHkgaW4gdGhlIGJyb3N3ZXIgc2hvd2luZyB3aW5kb3cuIEJ5IGRlZmF1bHQgbGV0J3Mgc2F5IHdlIGhhdmUgYSBsYXJnZSBsaXN0IG9mIGltYWdlcyBhbmQgdGhleSBhcmUgbm90IGludmlldy5cbiAgLy8gU28gd2UgdXNlICdmYWxzZScgZm9yIHRoZSBpbml0aWFsIHNldHRpbmcuXG4gIGNvbnN0IFtpblZpZXcsIHNldEluVmlld10gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgLy8gQWRkICdzY3JvbGwgZXZlbnQgbGlzdGVuZXInIGJ5IGFkZGluZyB0aGUgdXNlRWZmZWN0IEhvb2sgd2hlbiB0aGUgY29tcG9uZW50IGZpcnN0IG1vdW50cy5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCBzY3JvbGxIYW5kbGVyKTtcbiAgICAvLyB0aGUgcmV0dXJuIGZ1bmN0aW9uIGluc2lkZSB0aGlzIGFycm93IGZ1bmN0aW9uIHJlbW92ZXMgdGhlIGxpc3RlbmVyOlxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCBzY3JvbGxIYW5kbGVyKTtcbiAgICB9O1xuICB9LCBbXSk7XG5cbiAgLy8gU2Nyb2xsIGhhbmRsZXIgdG8gc2V0IHRoZSBpblZpZXcgc3RhdGUgYmFzZWQgb24gd2hldGhlciB0aGUgaW1hZ2UgaXMgYWN0dWFsbHkgaW4gdmlldy4gRWFjaCB0aW1lIHRoZSBwYWdlIHNjcm9sbHMsIHRoaXMgaXMgY2FsY3VsYXRlZCBhZ2Fpbi5cbiAgY29uc3Qgc2Nyb2xsSGFuZGxlciA9ICgpID0+IHtcbiAgICBzZXRJblZpZXcoaXNJblZpZXcoKSk7XG4gIH07XG5cbiAgLy8gU2V0IHRoZSBzcmMgYXR0cmlidXRlIG9mIGltYWdlIHRvIHNvdyBhIGNvbG9yIGltYWdlIHdoZW4gdGhpcyB3aGVuIHRoaXMgaW1hZ2UgY29tcG9uZW50IGlzIGluIHZpZXcgYW5kIGEgYmxhY2sgYW5kIHdoaXRlIGltYWdlIG9uZSB3aGVuIGl0IGlzIG5vdC5cbiAgLy8gUHJpbWFyeSBpbWFnZSA9IGImdywgc2Vjb25kYXJ5IGltYWdlIGlzIGNvbG9yLlxuICByZXR1cm4gPGltZyBzcmM9e2luVmlldyA/IHNlY29uZGFyeUltZyA6IHByaW1hcnlJbWd9IGFsdD0nJyByZWY9e2ltYWdlUmVmfSAvPjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEltYWdlVG9nZ2xlT25TY3JvbGw7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsIkltYWdlVG9nZ2xlT25TY3JvbGwiLCJwcmltYXJ5SW1nIiwic2Vjb25kYXJ5SW1nIiwiaW1hZ2VSZWYiLCJpc0luVmlldyIsInJlY3QiLCJjdXJyZW50IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidG9wIiwiYm90dG9tIiwid2luZG93IiwiaW5uZXJIZWlnaHQiLCJpblZpZXciLCJzZXRJblZpZXciLCJhZGRFdmVudExpc3RlbmVyIiwic2Nyb2xsSGFuZGxlciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ImageToggleOnScroll.js\n");

/***/ })

});